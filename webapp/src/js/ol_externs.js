/**********************************************************************
 * Extern for ol
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ol = {
  "Collection": {
    "unByKey": function () {}
  },
  "Feature": {
    "unByKey": function () {}
  },
  "Geolocation": {
    "unByKey": function () {}
  },
  "Graticule": function () {},
  "Kinetic": function () {},
  "Map": {
    "unByKey": function () {}
  },
  "Object": {
    "unByKey": function () {}
  },
  "Observable": {
    "unByKey": function () {}
  },
  "Overlay": {
    "unByKey": function () {}
  },
  "PluggableMap": {
    "unByKey": function () {}
  },
  "View": {
    "unByKey": function () {}
  },
  "WebGLMap": {
    "unByKey": function () {}
  },
  "array": {
    "stableSort": function () {}
  },
  "color": {
    "asArray": function () {},
    "asString": function () {}
  },
  "colorlike": {
    "asColorLike": function () {}
  },
  "control": {
    "Attribution": {
      "render": function () {},
      "unByKey": function () {}
    },
    "Control": {
      "unByKey": function () {}
    },
    "FullScreen": {
      "unByKey": function () {}
    },
    "MousePosition": {
      "render": function () {},
      "unByKey": function () {}
    },
    "OverviewMap": {
      "render": function () {},
      "unByKey": function () {}
    },
    "Rotate": {
      "render": function () {},
      "unByKey": function () {}
    },
    "ScaleLine": {
      "render": function () {},
      "unByKey": function () {}
    },
    "Zoom": {
      "unByKey": function () {}
    },
    "ZoomSlider": {
      "render": function () {},
      "unByKey": function () {}
    },
    "ZoomToExtent": {
      "unByKey": function () {}
    },
    "defaults": function () {}
  },
  "coordinate": {
    "add": function () {},
    "createStringXY": function () {},
    "format": function () {},
    "rotate": function () {},
    "toStringHDMS": function () {},
    "toStringXY": function () {}
  },
  "easing": {
    "easeIn": function () {},
    "easeOut": function () {},
    "inAndOut": function () {},
    "linear": function () {},
    "upAndDown": function () {}
  },
  "events": {
    "condition": {
      "altKeyOnly": function () {},
      "altShiftKeysOnly": function () {},
      "always": function () {},
      "click": function () {},
      "doubleClick": function () {},
      "focus": function () {},
      "mouseOnly": function () {},
      "never": function () {},
      "noModifierKeys": function () {},
      "platformModifierKeyOnly": function () {},
      "pointerMove": function () {},
      "primaryAction": function () {},
      "shiftKeyOnly": function () {},
      "singleClick": function () {},
      "targetNotEditable": function () {}
    }
  },
  "extent": {
    "applyTransform": function () {},
    "boundingExtent": function () {},
    "buffer": function () {},
    "containsCoordinate": function () {},
    "containsExtent": function () {},
    "containsXY": function () {},
    "createEmpty": function () {},
    "equals": function () {},
    "extend": function () {},
    "getArea": function () {},
    "getBottomLeft": function () {},
    "getBottomRight": function () {},
    "getCenter": function () {},
    "getHeight": function () {},
    "getIntersection": function () {},
    "getSize": function () {},
    "getTopLeft": function () {},
    "getTopRight": function () {},
    "getWidth": function () {},
    "intersects": function () {},
    "isEmpty": function () {}
  },
  "featureloader": {
    "xhr": function () {}
  },
  "format": {
    "EsriJSON": function () {},
    "Feature": function () {},
    "GML": function () {},
    "GML2": function () {},
    "GML3": function () {},
    "GML32": function () {},
    "GPX": function () {},
    "GeoJSON": function () {},
    "IGC": function () {},
    "KML": function () {},
    "MVT": function () {},
    "OSMXML": function () {},
    "Polyline": {
      "decodeDeltas": function () {},
      "decodeFloats": function () {},
      "encodeDeltas": function () {},
      "encodeFloats": function () {}
    },
    "TopoJSON": function () {},
    "WFS": {
      "writeFilter": function () {}
    },
    "WKT": function () {},
    "WMSCapabilities": function () {},
    "WMSGetFeatureInfo": function () {},
    "WMTSCapabilities": function () {},
    "filter": {
      "Bbox": function () {},
      "Contains": function () {},
      "During": function () {},
      "EqualTo": function () {},
      "GreaterThan": function () {},
      "GreaterThanOrEqualTo": function () {},
      "Intersects": function () {},
      "IsBetween": function () {},
      "IsLike": function () {},
      "IsNull": function () {},
      "LessThan": function () {},
      "LessThanOrEqualTo": function () {},
      "Not": function () {},
      "NotEqualTo": function () {},
      "Or": function () {},
      "Within": function () {},
      "and": function () {},
      "bbox": function () {},
      "between": function () {},
      "contains": function () {},
      "during": function () {},
      "equalTo": function () {},
      "greaterThan": function () {},
      "greaterThanOrEqualTo": function () {},
      "intersects": function () {},
      "isNull": function () {},
      "lessThan": function () {},
      "lessThanOrEqualTo": function () {},
      "like": function () {},
      "not": function () {},
      "notEqualTo": function () {},
      "or": function () {},
      "within": function () {}
    }
  },
  "geom": {
    "Circle": {
      "unByKey": function () {}
    },
    "Geometry": {
      "unByKey": function () {}
    },
    "GeometryCollection": {
      "unByKey": function () {}
    },
    "LineString": {
      "unByKey": function () {}
    },
    "LinearRing": {
      "unByKey": function () {}
    },
    "MultiLineString": {
      "unByKey": function () {}
    },
    "MultiPoint": {
      "unByKey": function () {}
    },
    "MultiPolygon": {
      "unByKey": function () {}
    },
    "Point": {
      "unByKey": function () {}
    },
    "Polygon": {
      "circular": function () {},
      "fromCircle": function () {},
      "fromExtent": function () {},
      "unByKey": function () {}
    },
    "SimpleGeometry": {
      "unByKey": function () {}
    }
  },
  "getUid": function () {},
  "has": {
    "DEVICE_PIXEL_RATIO": {},
    "GEOLOCATION": {},
    "TOUCH": {}
  },
  "inherits": function () {},
  "interaction": {
    "DoubleClickZoom": {
      "unByKey": function () {}
    },
    "DragAndDrop": {
      "unByKey": function () {}
    },
    "DragBox": {
      "unByKey": function () {}
    },
    "DragPan": {
      "unByKey": function () {}
    },
    "DragRotate": {
      "unByKey": function () {}
    },
    "DragRotateAndZoom": {
      "unByKey": function () {}
    },
    "DragZoom": {
      "unByKey": function () {}
    },
    "Draw": {
      "createBox": function () {},
      "createRegularPolygon": function () {},
      "unByKey": function () {}
    },
    "Extent": {
      "unByKey": function () {}
    },
    "Interaction": {
      "unByKey": function () {}
    },
    "KeyboardPan": {
      "unByKey": function () {}
    },
    "KeyboardZoom": {
      "unByKey": function () {}
    },
    "Modify": {
      "unByKey": function () {}
    },
    "MouseWheelZoom": {
      "unByKey": function () {}
    },
    "PinchRotate": {
      "unByKey": function () {}
    },
    "PinchZoom": {
      "unByKey": function () {}
    },
    "Pointer": {
      "unByKey": function () {}
    },
    "Select": {
      "unByKey": function () {}
    },
    "Snap": {
      "unByKey": function () {}
    },
    "Translate": {
      "unByKey": function () {}
    },
    "defaults": function () {}
  },
  "layer": {
    "Base": {
      "unByKey": function () {}
    },
    "Group": {
      "unByKey": function () {}
    },
    "Heatmap": {
      "unByKey": function () {}
    },
    "Image": {
      "unByKey": function () {}
    },
    "Tile": {
      "unByKey": function () {}
    },
    "Vector": {
      "unByKey": function () {}
    },
    "VectorTile": {
      "unByKey": function () {}
    }
  },
  "loadingstrategy": {
    "all": function () {},
    "bbox": function () {},
    "tile": function () {}
  },
  "proj": {
    "Projection": function () {},
    "Units": {
      "METERS_PER_UNIT": {
        "degrees": {},
        "ft": {},
        "m": {},
        "us-ft": {}
      }
    },
    "addCoordinateTransforms": function () {},
    "addEquivalentProjections": function () {},
    "addProjection": function () {},
    "equivalent": function () {},
    "fromLonLat": function () {},
    "get": function () {},
    "getPointResolution": function () {},
    "getTransform": function () {},
    "proj4": {
      "register": function () {}
    },
    "toLonLat": function () {},
    "transform": function () {},
    "transformExtent": function () {}
  },
  "render": {
    "VectorContext": function () {},
    "canvas": {
      "labelCache": {
        "addEventListener": function () {},
        "canExpireCache": function () {},
        "clear": function () {},
        "constructor": function () {},
        "containsKey": function () {},
        "count_": {},
        "dispatchEvent": function () {},
        "dispatching_": {},
        "dispose": function () {},
        "disposeInternal": function () {},
        "disposed_": {},
        "entries_": {},
        "forEach": function () {},
        "get": function () {},
        "getCount": function () {},
        "getKeys": function () {},
        "getListeners": function () {},
        "getValues": function () {},
        "hasListener": function () {},
        "highWaterMark": {},
        "listeners_": {},
        "newest_": {},
        "oldest_": {},
        "peekFirstKey": function () {},
        "peekLast": function () {},
        "peekLastKey": function () {},
        "pendingRemovals_": {},
        "pop": function () {},
        "prune": function () {},
        "remove": function () {},
        "removeEventListener": function () {},
        "replace": function () {},
        "set": function () {},
        "setSize": function () {}
      }
    },
    "toContext": function () {}
  },
  "renderer": {
    "canvas": {
      "ImageLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      },
      "Map": function () {},
      "TileLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      },
      "VectorLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      },
      "VectorTileLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      }
    },
    "webgl": {
      "ImageLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      },
      "Map": function () {},
      "TileLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      },
      "VectorLayer": {
        "create": function () {},
        "handles": function () {},
        "unByKey": function () {}
      }
    }
  },
  "size": {
    "toSize": function () {}
  },
  "source": {
    "BingMaps": {
      "unByKey": function () {}
    },
    "CartoDB": {
      "unByKey": function () {}
    },
    "Cluster": {
      "unByKey": function () {}
    },
    "Image": {
      "unByKey": function () {}
    },
    "ImageArcGISRest": {
      "unByKey": function () {}
    },
    "ImageCanvas": {
      "unByKey": function () {}
    },
    "ImageMapGuide": {
      "unByKey": function () {}
    },
    "ImageStatic": {
      "unByKey": function () {}
    },
    "ImageWMS": {
      "unByKey": function () {}
    },
    "OSM": {
      "ATTRIBUTION": {},
      "unByKey": function () {}
    },
    "Raster": {
      "unByKey": function () {}
    },
    "Source": {
      "unByKey": function () {}
    },
    "Stamen": {
      "unByKey": function () {}
    },
    "Tile": {
      "unByKey": function () {}
    },
    "TileArcGISRest": {
      "unByKey": function () {}
    },
    "TileDebug": {
      "unByKey": function () {}
    },
    "TileImage": {
      "unByKey": function () {}
    },
    "TileJSON": {
      "unByKey": function () {}
    },
    "TileWMS": {
      "unByKey": function () {}
    },
    "UTFGrid": {
      "unByKey": function () {}
    },
    "Vector": {
      "unByKey": function () {}
    },
    "VectorTile": {
      "unByKey": function () {}
    },
    "WMTS": {
      "optionsFromCapabilities": function () {},
      "unByKey": function () {}
    },
    "XYZ": {
      "unByKey": function () {}
    },
    "Zoomify": {
      "unByKey": function () {}
    }
  },
  "sphere": {
    "getArea": function () {},
    "getDistance": function () {},
    "getLength": function () {}
  },
  "style": {
    "AtlasManager": function () {},
    "Circle": function () {},
    "Fill": function () {},
    "Icon": function () {},
    "IconImageCache": {
      "shared": {
        "cacheSize_": {},
        "cache_": {},
        "clear": function () {},
        "expire": function () {},
        "get": function () {},
        "maxCacheSize_": {},
        "set": function () {},
        "setSize": function () {}
      }
    },
    "Image": function () {},
    "RegularShape": function () {},
    "Stroke": function () {},
    "Style": function () {},
    "Text": function () {}
  },
  "tilegrid": {
    "TileGrid": function () {},
    "WMTS": {
      "createFromCapabilitiesMatrixSet": function () {}
    },
    "createXYZ": function () {}
  },
  "xml": {
    "getAllTextContent": function () {},
    "parse": function () {}
  }
};
ol.Collection.prototype = {
  "addEventListener": function () {},
  "assertUnique_": function () {},
  "changed": function () {},
  "clear": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "extend": function () {},
  "forEach": function () {},
  "get": function () {},
  "getArray": function () {},
  "getKeys": function () {},
  "getLength": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "hasListener": function () {},
  "insertAt": function () {},
  "item": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "pop": function () {},
  "push": function () {},
  "remove": function () {},
  "removeAt": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAt": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {},
  "updateLength_": function () {}
};
ol.Feature.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "clone": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getGeometry": function () {},
  "getGeometryName": function () {},
  "getId": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getStyle": function () {},
  "getStyleFunction": function () {},
  "handleGeometryChange_": function () {},
  "handleGeometryChanged_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setGeometry": function () {},
  "setGeometryName": function () {},
  "setId": function () {},
  "setProperties": function () {},
  "setStyle": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.Geolocation.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getAccuracy": function () {},
  "getAccuracyGeometry": function () {},
  "getAltitude": function () {},
  "getAltitudeAccuracy": function () {},
  "getHeading": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getPosition": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSpeed": function () {},
  "getTracking": function () {},
  "getTrackingOptions": function () {},
  "handleProjectionChanged_": function () {},
  "handleTrackingChanged_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "positionChange_": function () {},
  "positionError_": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setProjection": function () {},
  "setProperties": function () {},
  "setTracking": function () {},
  "setTrackingOptions": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.Graticule.prototype = {
  "addMeridian_": function () {},
  "addParallel_": function () {},
  "createGraticule_": function () {},
  "getInterval_": function () {},
  "getMap": function () {},
  "getMeridianPoint_": function () {},
  "getMeridian_": function () {},
  "getMeridians": function () {},
  "getParallelPoint_": function () {},
  "getParallel_": function () {},
  "getParallels": function () {},
  "handlePostCompose_": function () {},
  "setMap": function () {},
  "updateProjectionInfo_": function () {}
};
ol.Kinetic.prototype = {
  "begin": function () {},
  "end": function () {},
  "getAngle": function () {},
  "getDistance": function () {},
  "update": function () {}
};
ol.Map.prototype = {
  "addControl": function () {},
  "addEventListener": function () {},
  "addInteraction": function () {},
  "addLayer": function () {},
  "addOverlay": function () {},
  "addOverlayInternal_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createRenderer": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtPixel": function () {},
  "forEachLayerAtPixel": function () {},
  "get": function () {},
  "getControls": function () {},
  "getCoordinateFromPixel": function () {},
  "getEventCoordinate": function () {},
  "getEventPixel": function () {},
  "getFeaturesAtPixel": function () {},
  "getInteractions": function () {},
  "getKeys": function () {},
  "getLayerGroup": function () {},
  "getLayers": function () {},
  "getListeners": function () {},
  "getOverlayById": function () {},
  "getOverlayContainer": function () {},
  "getOverlayContainerStopEvent": function () {},
  "getOverlays": function () {},
  "getPixelFromCoordinate": function () {},
  "getProperties": function () {},
  "getRenderer": function () {},
  "getRevision": function () {},
  "getSize": function () {},
  "getTarget": function () {},
  "getTargetElement": function () {},
  "getTilePriority": function () {},
  "getView": function () {},
  "getViewport": function () {},
  "handleBrowserEvent": function () {},
  "handleLayerGroupChanged_": function () {},
  "handleMapBrowserEvent": function () {},
  "handlePostRender": function () {},
  "handleSizeChanged_": function () {},
  "handleTargetChanged_": function () {},
  "handleTileChange_": function () {},
  "handleViewChanged_": function () {},
  "handleViewPropertyChanged_": function () {},
  "hasFeatureAtPixel": function () {},
  "hasListener": function () {},
  "isRendered": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeControl": function () {},
  "removeEventListener": function () {},
  "removeInteraction": function () {},
  "removeLayer": function () {},
  "removeOverlay": function () {},
  "render": function () {},
  "renderFrame_": function () {},
  "renderSync": function () {},
  "set": function () {},
  "setLayerGroup": function () {},
  "setProperties": function () {},
  "setSize": function () {},
  "setTarget": function () {},
  "setView": function () {},
  "skipFeature": function () {},
  "un": function () {},
  "unset": function () {},
  "unskipFeature": function () {},
  "updateSize": function () {}
};
ol.Object.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.Observable.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "getListeners": function () {},
  "getRevision": function () {},
  "hasListener": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "un": function () {}
};
ol.Overlay.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getElement": function () {},
  "getId": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getOffset": function () {},
  "getOptions": function () {},
  "getPosition": function () {},
  "getPositioning": function () {},
  "getProperties": function () {},
  "getRect": function () {},
  "getRevision": function () {},
  "handleElementChanged": function () {},
  "handleMapChanged": function () {},
  "handleOffsetChanged": function () {},
  "handlePositionChanged": function () {},
  "handlePositioningChanged": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "panIntoView": function () {},
  "removeEventListener": function () {},
  "render": function () {},
  "set": function () {},
  "setElement": function () {},
  "setMap": function () {},
  "setOffset": function () {},
  "setPosition": function () {},
  "setPositioning": function () {},
  "setProperties": function () {},
  "setVisible": function () {},
  "un": function () {},
  "unset": function () {},
  "updatePixelPosition": function () {},
  "updateRenderedPosition": function () {}
};
ol.PluggableMap.prototype = {
  "addControl": function () {},
  "addEventListener": function () {},
  "addInteraction": function () {},
  "addLayer": function () {},
  "addOverlay": function () {},
  "addOverlayInternal_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createRenderer": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtPixel": function () {},
  "forEachLayerAtPixel": function () {},
  "get": function () {},
  "getControls": function () {},
  "getCoordinateFromPixel": function () {},
  "getEventCoordinate": function () {},
  "getEventPixel": function () {},
  "getFeaturesAtPixel": function () {},
  "getInteractions": function () {},
  "getKeys": function () {},
  "getLayerGroup": function () {},
  "getLayers": function () {},
  "getListeners": function () {},
  "getOverlayById": function () {},
  "getOverlayContainer": function () {},
  "getOverlayContainerStopEvent": function () {},
  "getOverlays": function () {},
  "getPixelFromCoordinate": function () {},
  "getProperties": function () {},
  "getRenderer": function () {},
  "getRevision": function () {},
  "getSize": function () {},
  "getTarget": function () {},
  "getTargetElement": function () {},
  "getTilePriority": function () {},
  "getView": function () {},
  "getViewport": function () {},
  "handleBrowserEvent": function () {},
  "handleLayerGroupChanged_": function () {},
  "handleMapBrowserEvent": function () {},
  "handlePostRender": function () {},
  "handleSizeChanged_": function () {},
  "handleTargetChanged_": function () {},
  "handleTileChange_": function () {},
  "handleViewChanged_": function () {},
  "handleViewPropertyChanged_": function () {},
  "hasFeatureAtPixel": function () {},
  "hasListener": function () {},
  "isRendered": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeControl": function () {},
  "removeEventListener": function () {},
  "removeInteraction": function () {},
  "removeLayer": function () {},
  "removeOverlay": function () {},
  "render": function () {},
  "renderFrame_": function () {},
  "renderSync": function () {},
  "set": function () {},
  "setLayerGroup": function () {},
  "setProperties": function () {},
  "setSize": function () {},
  "setTarget": function () {},
  "setView": function () {},
  "skipFeature": function () {},
  "un": function () {},
  "unset": function () {},
  "unskipFeature": function () {},
  "updateSize": function () {}
};
ol.View.prototype = {
  "addEventListener": function () {},
  "animate": function () {},
  "applyOptions_": function () {},
  "calculateCenterRotate": function () {},
  "calculateCenterZoom": function () {},
  "calculateExtent": function () {},
  "cancelAnimations": function () {},
  "centerOn": function () {},
  "changed": function () {},
  "constrainCenter": function () {},
  "constrainResolution": function () {},
  "constrainRotation": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "fit": function () {},
  "get": function () {},
  "getAnimating": function () {},
  "getCenter": function () {},
  "getConstraints": function () {},
  "getHints": function () {},
  "getInteracting": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMaxZoom": function () {},
  "getMinResolution": function () {},
  "getMinZoom": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolution": function () {},
  "getResolutionForExtent": function () {},
  "getResolutionForValueFunction": function () {},
  "getResolutionForZoom": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getRotation": function () {},
  "getSizeFromViewport_": function () {},
  "getState": function () {},
  "getUpdatedOptions_": function () {},
  "getValueForResolutionFunction": function () {},
  "getZoom": function () {},
  "getZoomForResolution": function () {},
  "hasListener": function () {},
  "isDef": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "set": function () {},
  "setCenter": function () {},
  "setHint": function () {},
  "setMaxZoom": function () {},
  "setMinZoom": function () {},
  "setProperties": function () {},
  "setResolution": function () {},
  "setRotation": function () {},
  "setZoom": function () {},
  "un": function () {},
  "unset": function () {},
  "updateAnimations_": function () {}
};
ol.WebGLMap.prototype = {
  "addControl": function () {},
  "addEventListener": function () {},
  "addInteraction": function () {},
  "addLayer": function () {},
  "addOverlay": function () {},
  "addOverlayInternal_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createRenderer": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtPixel": function () {},
  "forEachLayerAtPixel": function () {},
  "get": function () {},
  "getControls": function () {},
  "getCoordinateFromPixel": function () {},
  "getEventCoordinate": function () {},
  "getEventPixel": function () {},
  "getFeaturesAtPixel": function () {},
  "getInteractions": function () {},
  "getKeys": function () {},
  "getLayerGroup": function () {},
  "getLayers": function () {},
  "getListeners": function () {},
  "getOverlayById": function () {},
  "getOverlayContainer": function () {},
  "getOverlayContainerStopEvent": function () {},
  "getOverlays": function () {},
  "getPixelFromCoordinate": function () {},
  "getProperties": function () {},
  "getRenderer": function () {},
  "getRevision": function () {},
  "getSize": function () {},
  "getTarget": function () {},
  "getTargetElement": function () {},
  "getTilePriority": function () {},
  "getView": function () {},
  "getViewport": function () {},
  "handleBrowserEvent": function () {},
  "handleLayerGroupChanged_": function () {},
  "handleMapBrowserEvent": function () {},
  "handlePostRender": function () {},
  "handleSizeChanged_": function () {},
  "handleTargetChanged_": function () {},
  "handleTileChange_": function () {},
  "handleViewChanged_": function () {},
  "handleViewPropertyChanged_": function () {},
  "hasFeatureAtPixel": function () {},
  "hasListener": function () {},
  "isRendered": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeControl": function () {},
  "removeEventListener": function () {},
  "removeInteraction": function () {},
  "removeLayer": function () {},
  "removeOverlay": function () {},
  "render": function () {},
  "renderFrame_": function () {},
  "renderSync": function () {},
  "set": function () {},
  "setLayerGroup": function () {},
  "setProperties": function () {},
  "setSize": function () {},
  "setTarget": function () {},
  "setView": function () {},
  "skipFeature": function () {},
  "un": function () {},
  "unset": function () {},
  "unskipFeature": function () {},
  "updateSize": function () {}
};
ol.control.Attribution.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "collectSourceAttributions_": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getCollapsed": function () {},
  "getCollapsible": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "handleToggle_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setCollapsed": function () {},
  "setCollapsible": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {},
  "updateElement_": function () {}
};
ol.control.Control.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.control.FullScreen.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "handleFullScreenChange_": function () {},
  "handleFullScreen_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setClassName_": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.control.MousePosition.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getCoordinateFormat": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleMouseMove": function () {},
  "handleMouseOut": function () {},
  "handleProjectionChanged_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setCoordinateFormat": function () {},
  "setMap": function () {},
  "setProjection": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {},
  "updateHTML_": function () {}
};
ol.control.OverviewMap.prototype = {
  "addEventListener": function () {},
  "bindView_": function () {},
  "calculateCoordinateRotate_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getCollapsed": function () {},
  "getCollapsible": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getOverviewMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "handleMapPropertyChange_": function () {},
  "handleRotationChanged_": function () {},
  "handleToggle_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "recenter_": function () {},
  "removeEventListener": function () {},
  "resetExtent_": function () {},
  "set": function () {},
  "setCollapsed": function () {},
  "setCollapsible": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unbindView_": function () {},
  "unset": function () {},
  "updateBox_": function () {},
  "validateExtent_": function () {}
};
ol.control.Rotate.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "resetNorth_": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.control.ScaleLine.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getUnits": function () {},
  "handleUnitsChanged_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "setUnits": function () {},
  "un": function () {},
  "unset": function () {},
  "updateElement_": function () {}
};
ol.control.Zoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {},
  "zoomByDelta_": function () {}
};
ol.control.ZoomSlider.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getPositionForResolution_": function () {},
  "getProperties": function () {},
  "getRelativePosition_": function () {},
  "getResolutionForPosition_": function () {},
  "getRevision": function () {},
  "handleContainerClick_": function () {},
  "handleDraggerDrag_": function () {},
  "handleDraggerEnd_": function () {},
  "handleDraggerStart_": function () {},
  "hasListener": function () {},
  "initSlider_": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "setThumbPosition_": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.control.ZoomToExtent.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleClick_": function () {},
  "handleZoomToExtent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "setTarget": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.format.EsriJSON.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromObject": function () {},
  "readFeatures": function () {},
  "readFeaturesFromObject": function () {},
  "readGeometry": function () {},
  "readGeometryFromObject": function () {},
  "readProjection": function () {},
  "readProjectionFromObject": function () {},
  "writeFeature": function () {},
  "writeFeatureObject": function () {},
  "writeFeatures": function () {},
  "writeFeaturesObject": function () {},
  "writeGeometry": function () {},
  "writeGeometryObject": function () {}
};
ol.format.Feature.prototype = {
  "adaptOptions": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatures": function () {},
  "readGeometry": function () {},
  "readProjection": function () {},
  "writeFeature": function () {},
  "writeFeatures": function () {},
  "writeGeometry": function () {}
};
ol.format.GML.prototype = {
  "CURVEMEMBER_PARSERS_": function () {},
  "CURVE_PARSERS_": function () {},
  "ENVELOPE_PARSERS_": function () {},
  "ENVELOPE_SERIALIZERS_": function () {},
  "FLAT_LINEAR_RINGS_PARSERS": function () {},
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () {},
  "GEOMETRY_NODE_FACTORY_": function () {},
  "GEOMETRY_PARSERS": function () {},
  "GEOMETRY_SERIALIZERS_": function () {},
  "LINESTRINGMEMBER_PARSERS_": function () {},
  "LINESTRINGORCURVEMEMBER_SERIALIZERS_": function () {},
  "MULTICURVE_PARSERS_": function () {},
  "MULTIGEOMETRY_MEMBER_NODE_FACTORY_": function () {},
  "MULTILINESTRING_PARSERS_": function () {},
  "MULTIPOINT_PARSERS_": function () {},
  "MULTIPOLYGON_PARSERS_": function () {},
  "MULTISURFACE_PARSERS_": function () {},
  "PATCHES_PARSERS_": function () {},
  "POINTMEMBER_PARSERS_": function () {},
  "POINTMEMBER_SERIALIZERS_": function () {},
  "POLYGONMEMBER_PARSERS_": function () {},
  "RING_NODE_FACTORY_": function () {},
  "RING_PARSERS": function () {},
  "RING_SERIALIZERS_": function () {},
  "SEGMENTS_PARSERS_": function () {},
  "SURFACEMEMBER_PARSERS_": function () {},
  "SURFACEORPOLYGONMEMBER_SERIALIZERS_": function () {},
  "SURFACE_PARSERS_": function () {},
  "adaptOptions": function () {},
  "constructor": function () {},
  "curveMemberParser_": function () {},
  "exteriorParser_": function () {},
  "getCoords_": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "interiorParser_": function () {},
  "lineStringMemberParser_": function () {},
  "namespace": function () {},
  "pointMemberParser_": function () {},
  "polygonMemberParser_": function () {},
  "readCurve_": function () {},
  "readEnvelope_": function () {},
  "readFeature": function () {},
  "readFeatureElement": function () {},
  "readFeatureElementInternal": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readFeaturesInternal": function () {},
  "readFlatCoordinatesFromNode_": function () {},
  "readFlatLinearRing_": function () {},
  "readFlatPosList_": function () {},
  "readFlatPos_": function () {},
  "readGeometry": function () {},
  "readGeometryElement": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readLineString": function () {},
  "readLineStringSegment_": function () {},
  "readLinearRing": function () {},
  "readMultiCurve_": function () {},
  "readMultiLineString": function () {},
  "readMultiPoint": function () {},
  "readMultiPolygon": function () {},
  "readMultiSurface_": function () {},
  "readPatch_": function () {},
  "readPoint": function () {},
  "readPolygon": function () {},
  "readPolygonPatch_": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "readSegment_": function () {},
  "readSurface_": function () {},
  "surfaceMemberParser_": function () {},
  "writeCurveOrLineString_": function () {},
  "writeCurveSegments_": function () {},
  "writeEnvelope": function () {},
  "writeFeature": function () {},
  "writeFeatureElement": function () {},
  "writeFeatureMembers_": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryElement": function () {},
  "writeGeometryNode": function () {},
  "writeLineStringOrCurveMember_": function () {},
  "writeLinearRing_": function () {},
  "writeMultiCurveOrLineString_": function () {},
  "writeMultiPoint_": function () {},
  "writeMultiSurfaceOrPolygon_": function () {},
  "writePointMember_": function () {},
  "writePoint_": function () {},
  "writePosList_": function () {},
  "writePos_": function () {},
  "writeRing_": function () {},
  "writeSurfaceOrPolygonMember_": function () {},
  "writeSurfaceOrPolygon_": function () {},
  "writeSurfacePatches_": function () {}
};
ol.format.GML2.prototype = {
  "BOX_PARSERS_": function () {},
  "ENVELOPE_SERIALIZERS_": function () {},
  "FLAT_LINEAR_RINGS_PARSERS": function () {},
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () {},
  "GEOMETRY_NODE_FACTORY_": function () {},
  "GEOMETRY_PARSERS": function () {},
  "GEOMETRY_SERIALIZERS_": function () {},
  "LINESTRINGMEMBER_PARSERS_": function () {},
  "LINESTRINGORCURVEMEMBER_SERIALIZERS_": function () {},
  "MULTIGEOMETRY_MEMBER_NODE_FACTORY_": function () {},
  "MULTILINESTRING_PARSERS_": function () {},
  "MULTIPOINT_PARSERS_": function () {},
  "MULTIPOLYGON_PARSERS_": function () {},
  "POINTMEMBER_PARSERS_": function () {},
  "POINTMEMBER_SERIALIZERS_": function () {},
  "POLYGONMEMBER_PARSERS_": function () {},
  "RING_NODE_FACTORY_": function () {},
  "RING_PARSERS": function () {},
  "RING_SERIALIZERS_": function () {},
  "SURFACEORPOLYGONMEMBER_SERIALIZERS_": function () {},
  "adaptOptions": function () {},
  "constructor": function () {},
  "createCoordinatesNode_": function () {},
  "getCoords_": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "innerBoundaryIsParser_": function () {},
  "lineStringMemberParser_": function () {},
  "namespace": function () {},
  "outerBoundaryIsParser_": function () {},
  "pointMemberParser_": function () {},
  "polygonMemberParser_": function () {},
  "readBox_": function () {},
  "readFeature": function () {},
  "readFeatureElement": function () {},
  "readFeatureElementInternal": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readFeaturesInternal": function () {},
  "readFlatCoordinatesFromNode_": function () {},
  "readFlatCoordinates_": function () {},
  "readFlatLinearRing_": function () {},
  "readGeometry": function () {},
  "readGeometryElement": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readLineString": function () {},
  "readLinearRing": function () {},
  "readMultiLineString": function () {},
  "readMultiPoint": function () {},
  "readMultiPolygon": function () {},
  "readPoint": function () {},
  "readPolygon": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "writeCoordinates_": function () {},
  "writeCurveOrLineString_": function () {},
  "writeCurveSegments_": function () {},
  "writeEnvelope": function () {},
  "writeFeature": function () {},
  "writeFeatureElement": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryElement": function () {},
  "writeGeometryNode": function () {},
  "writeLineStringOrCurveMember_": function () {},
  "writeLinearRing_": function () {},
  "writeMultiCurveOrLineString_": function () {},
  "writeMultiPoint_": function () {},
  "writeMultiSurfaceOrPolygon_": function () {},
  "writePointMember_": function () {},
  "writePoint_": function () {},
  "writeRing_": function () {},
  "writeSurfaceOrPolygonMember_": function () {},
  "writeSurfaceOrPolygon_": function () {},
  "writeSurfacePatches_": function () {}
};
ol.format.GML3.prototype = {
  "CURVEMEMBER_PARSERS_": function () {},
  "CURVE_PARSERS_": function () {},
  "ENVELOPE_PARSERS_": function () {},
  "ENVELOPE_SERIALIZERS_": function () {},
  "FLAT_LINEAR_RINGS_PARSERS": function () {},
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () {},
  "GEOMETRY_NODE_FACTORY_": function () {},
  "GEOMETRY_PARSERS": function () {},
  "GEOMETRY_SERIALIZERS_": function () {},
  "LINESTRINGMEMBER_PARSERS_": function () {},
  "LINESTRINGORCURVEMEMBER_SERIALIZERS_": function () {},
  "MULTICURVE_PARSERS_": function () {},
  "MULTIGEOMETRY_MEMBER_NODE_FACTORY_": function () {},
  "MULTILINESTRING_PARSERS_": function () {},
  "MULTIPOINT_PARSERS_": function () {},
  "MULTIPOLYGON_PARSERS_": function () {},
  "MULTISURFACE_PARSERS_": function () {},
  "PATCHES_PARSERS_": function () {},
  "POINTMEMBER_PARSERS_": function () {},
  "POINTMEMBER_SERIALIZERS_": function () {},
  "POLYGONMEMBER_PARSERS_": function () {},
  "RING_NODE_FACTORY_": function () {},
  "RING_PARSERS": function () {},
  "RING_SERIALIZERS_": function () {},
  "SEGMENTS_PARSERS_": function () {},
  "SURFACEMEMBER_PARSERS_": function () {},
  "SURFACEORPOLYGONMEMBER_SERIALIZERS_": function () {},
  "SURFACE_PARSERS_": function () {},
  "adaptOptions": function () {},
  "constructor": function () {},
  "curveMemberParser_": function () {},
  "exteriorParser_": function () {},
  "getCoords_": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "interiorParser_": function () {},
  "lineStringMemberParser_": function () {},
  "namespace": function () {},
  "pointMemberParser_": function () {},
  "polygonMemberParser_": function () {},
  "readCurve_": function () {},
  "readEnvelope_": function () {},
  "readFeature": function () {},
  "readFeatureElement": function () {},
  "readFeatureElementInternal": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readFeaturesInternal": function () {},
  "readFlatCoordinatesFromNode_": function () {},
  "readFlatLinearRing_": function () {},
  "readFlatPosList_": function () {},
  "readFlatPos_": function () {},
  "readGeometry": function () {},
  "readGeometryElement": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readLineString": function () {},
  "readLineStringSegment_": function () {},
  "readLinearRing": function () {},
  "readMultiCurve_": function () {},
  "readMultiLineString": function () {},
  "readMultiPoint": function () {},
  "readMultiPolygon": function () {},
  "readMultiSurface_": function () {},
  "readPatch_": function () {},
  "readPoint": function () {},
  "readPolygon": function () {},
  "readPolygonPatch_": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "readSegment_": function () {},
  "readSurface_": function () {},
  "surfaceMemberParser_": function () {},
  "writeCurveOrLineString_": function () {},
  "writeCurveSegments_": function () {},
  "writeEnvelope": function () {},
  "writeFeature": function () {},
  "writeFeatureElement": function () {},
  "writeFeatureMembers_": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryElement": function () {},
  "writeGeometryNode": function () {},
  "writeLineStringOrCurveMember_": function () {},
  "writeLinearRing_": function () {},
  "writeMultiCurveOrLineString_": function () {},
  "writeMultiPoint_": function () {},
  "writeMultiSurfaceOrPolygon_": function () {},
  "writePointMember_": function () {},
  "writePoint_": function () {},
  "writePosList_": function () {},
  "writePos_": function () {},
  "writeRing_": function () {},
  "writeSurfaceOrPolygonMember_": function () {},
  "writeSurfaceOrPolygon_": function () {},
  "writeSurfacePatches_": function () {}
};
ol.format.GML32.prototype = {
  "CURVEMEMBER_PARSERS_": function () {},
  "CURVE_PARSERS_": function () {},
  "ENVELOPE_PARSERS_": function () {},
  "ENVELOPE_SERIALIZERS_": function () {},
  "FLAT_LINEAR_RINGS_PARSERS": function () {},
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () {},
  "GEOMETRY_NODE_FACTORY_": function () {},
  "GEOMETRY_PARSERS": function () {},
  "GEOMETRY_SERIALIZERS_": function () {},
  "LINESTRINGMEMBER_PARSERS_": function () {},
  "LINESTRINGORCURVEMEMBER_SERIALIZERS_": function () {},
  "MULTICURVE_PARSERS_": function () {},
  "MULTIGEOMETRY_MEMBER_NODE_FACTORY_": function () {},
  "MULTILINESTRING_PARSERS_": function () {},
  "MULTIPOINT_PARSERS_": function () {},
  "MULTIPOLYGON_PARSERS_": function () {},
  "MULTISURFACE_PARSERS_": function () {},
  "PATCHES_PARSERS_": function () {},
  "POINTMEMBER_PARSERS_": function () {},
  "POINTMEMBER_SERIALIZERS_": function () {},
  "POLYGONMEMBER_PARSERS_": function () {},
  "RING_NODE_FACTORY_": function () {},
  "RING_PARSERS": function () {},
  "RING_SERIALIZERS_": function () {},
  "SEGMENTS_PARSERS_": function () {},
  "SURFACEMEMBER_PARSERS_": function () {},
  "SURFACEORPOLYGONMEMBER_SERIALIZERS_": function () {},
  "SURFACE_PARSERS_": function () {},
  "adaptOptions": function () {},
  "constructor": function () {},
  "curveMemberParser_": function () {},
  "exteriorParser_": function () {},
  "getCoords_": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "interiorParser_": function () {},
  "lineStringMemberParser_": function () {},
  "namespace": function () {},
  "pointMemberParser_": function () {},
  "polygonMemberParser_": function () {},
  "readCurve_": function () {},
  "readEnvelope_": function () {},
  "readFeature": function () {},
  "readFeatureElement": function () {},
  "readFeatureElementInternal": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readFeaturesInternal": function () {},
  "readFlatCoordinatesFromNode_": function () {},
  "readFlatLinearRing_": function () {},
  "readFlatPosList_": function () {},
  "readFlatPos_": function () {},
  "readGeometry": function () {},
  "readGeometryElement": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readLineString": function () {},
  "readLineStringSegment_": function () {},
  "readLinearRing": function () {},
  "readMultiCurve_": function () {},
  "readMultiLineString": function () {},
  "readMultiPoint": function () {},
  "readMultiPolygon": function () {},
  "readMultiSurface_": function () {},
  "readPatch_": function () {},
  "readPoint": function () {},
  "readPolygon": function () {},
  "readPolygonPatch_": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "readSegment_": function () {},
  "readSurface_": function () {},
  "surfaceMemberParser_": function () {},
  "writeCurveOrLineString_": function () {},
  "writeCurveSegments_": function () {},
  "writeEnvelope": function () {},
  "writeFeature": function () {},
  "writeFeatureElement": function () {},
  "writeFeatureMembers_": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryElement": function () {},
  "writeGeometryNode": function () {},
  "writeLineStringOrCurveMember_": function () {},
  "writeLinearRing_": function () {},
  "writeMultiCurveOrLineString_": function () {},
  "writeMultiPoint_": function () {},
  "writeMultiSurfaceOrPolygon_": function () {},
  "writePointMember_": function () {},
  "writePoint_": function () {},
  "writePosList_": function () {},
  "writePos_": function () {},
  "writeRing_": function () {},
  "writeSurfaceOrPolygonMember_": function () {},
  "writeSurfaceOrPolygon_": function () {},
  "writeSurfacePatches_": function () {}
};
ol.format.GPX.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "handleReadExtensions_": function () {},
  "readFeature": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readGeometry": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "writeFeature": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryNode": function () {}
};
ol.format.GeoJSON.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromObject": function () {},
  "readFeatures": function () {},
  "readFeaturesFromObject": function () {},
  "readGeometry": function () {},
  "readGeometryFromObject": function () {},
  "readProjection": function () {},
  "readProjectionFromObject": function () {},
  "writeFeature": function () {},
  "writeFeatureObject": function () {},
  "writeFeatures": function () {},
  "writeFeaturesObject": function () {},
  "writeGeometry": function () {},
  "writeGeometryObject": function () {}
};
ol.format.IGC.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromText": function () {},
  "readFeatures": function () {},
  "readFeaturesFromText": function () {},
  "readGeometry": function () {},
  "readGeometryFromText": function () {},
  "readProjection": function () {},
  "readProjectionFromText": function () {},
  "writeFeature": function () {},
  "writeFeatureText": function () {},
  "writeFeatures": function () {},
  "writeFeaturesText": function () {},
  "writeGeometry": function () {},
  "writeGeometryText": function () {}
};
ol.format.KML.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readDocumentOrFolder_": function () {},
  "readFeature": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readGeometry": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readName": function () {},
  "readNameFromDocument": function () {},
  "readNameFromNode": function () {},
  "readNetworkLinks": function () {},
  "readNetworkLinksFromDocument": function () {},
  "readNetworkLinksFromNode": function () {},
  "readPlacemark_": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "readRegion": function () {},
  "readRegionFromDocument": function () {},
  "readRegionFromNode": function () {},
  "readSharedStyleMap_": function () {},
  "readSharedStyle_": function () {},
  "writeFeature": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryNode": function () {}
};
ol.format.MVT.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "createFeature_": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatures": function () {},
  "readGeometry": function () {},
  "readProjection": function () {},
  "readRawGeometry_": function () {},
  "setLayers": function () {},
  "writeFeature": function () {},
  "writeFeatures": function () {},
  "writeGeometry": function () {}
};
ol.format.OSMXML.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readGeometry": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "writeFeature": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryNode": function () {}
};
ol.format.Polyline.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromText": function () {},
  "readFeatures": function () {},
  "readFeaturesFromText": function () {},
  "readGeometry": function () {},
  "readGeometryFromText": function () {},
  "readProjection": function () {},
  "readProjectionFromText": function () {},
  "writeFeature": function () {},
  "writeFeatureText": function () {},
  "writeFeatures": function () {},
  "writeFeaturesText": function () {},
  "writeGeometry": function () {},
  "writeGeometryText": function () {}
};
ol.format.TopoJSON.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromObject": function () {},
  "readFeatures": function () {},
  "readFeaturesFromObject": function () {},
  "readGeometry": function () {},
  "readGeometryFromObject": function () {},
  "readProjection": function () {},
  "readProjectionFromObject": function () {},
  "writeFeature": function () {},
  "writeFeatureObject": function () {},
  "writeFeatures": function () {},
  "writeFeaturesObject": function () {},
  "writeGeometry": function () {},
  "writeGeometryObject": function () {}
};
ol.format.WFS.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getFeatureType": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureCollectionMetadata": function () {},
  "readFeatureCollectionMetadataFromDocument": function () {},
  "readFeatureCollectionMetadataFromNode": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readGeometry": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "readTransactionResponse": function () {},
  "readTransactionResponseFromDocument": function () {},
  "readTransactionResponseFromNode": function () {},
  "setFeatureType": function () {},
  "writeFeature": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryNode": function () {},
  "writeGetFeature": function () {},
  "writeTransaction": function () {}
};
ol.format.WKT.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "parse_": function () {},
  "readFeature": function () {},
  "readFeatureFromText": function () {},
  "readFeatures": function () {},
  "readFeaturesFromText": function () {},
  "readGeometry": function () {},
  "readGeometryFromText": function () {},
  "readProjection": function () {},
  "readProjectionFromText": function () {},
  "writeFeature": function () {},
  "writeFeatureText": function () {},
  "writeFeatures": function () {},
  "writeFeaturesText": function () {},
  "writeGeometry": function () {},
  "writeGeometryText": function () {}
};
ol.format.WMSCapabilities.prototype = {
  "constructor": function () {},
  "read": function () {},
  "readFromDocument": function () {},
  "readFromNode": function () {}
};
ol.format.WMSGetFeatureInfo.prototype = {
  "adaptOptions": function () {},
  "constructor": function () {},
  "getLastExtent": function () {},
  "getLayers": function () {},
  "getReadOptions": function () {},
  "getType": function () {},
  "readFeature": function () {},
  "readFeatureFromDocument": function () {},
  "readFeatureFromNode": function () {},
  "readFeatures": function () {},
  "readFeaturesFromDocument": function () {},
  "readFeaturesFromNode": function () {},
  "readFeatures_": function () {},
  "readGeometry": function () {},
  "readGeometryFromDocument": function () {},
  "readGeometryFromNode": function () {},
  "readProjection": function () {},
  "readProjectionFromDocument": function () {},
  "readProjectionFromNode": function () {},
  "setLayers": function () {},
  "writeFeature": function () {},
  "writeFeatureNode": function () {},
  "writeFeatures": function () {},
  "writeFeaturesNode": function () {},
  "writeGeometry": function () {},
  "writeGeometryNode": function () {}
};
ol.format.WMTSCapabilities.prototype = {
  "constructor": function () {},
  "read": function () {},
  "readFromDocument": function () {},
  "readFromNode": function () {}
};
ol.format.filter.Bbox.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.Contains.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.During.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.EqualTo.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.GreaterThan.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.GreaterThanOrEqualTo.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.Intersects.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.IsBetween.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.IsLike.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.IsNull.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.LessThan.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.LessThanOrEqualTo.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.Not.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.NotEqualTo.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.Or.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.format.filter.Within.prototype = {
  "constructor": function () {},
  "getTagName": function () {}
};
ol.geom.Circle.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getCenter": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRadius": function () {},
  "getRadiusSquared_": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCenter": function () {},
  "setCenterAndRadius": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "setRadius": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.Geometry.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.GeometryCollection.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getExtent": function () {},
  "getGeometries": function () {},
  "getGeometriesArray": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "isEmpty": function () {},
  "listenGeometriesChange_": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setGeometries": function () {},
  "setGeometriesArray": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unlistenGeometriesChange_": function () {},
  "unset": function () {}
};
ol.geom.LineString.prototype = {
  "addEventListener": function () {},
  "appendCoordinate": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachSegment": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getCoordinateAt": function () {},
  "getCoordinateAtM": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getFlatMidpoint": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getLength": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.LinearRing.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getArea": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.MultiLineString.prototype = {
  "addEventListener": function () {},
  "appendLineString": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getCoordinateAtM": function () {},
  "getCoordinates": function () {},
  "getEnds": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getFlatMidpoints": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getLineString": function () {},
  "getLineStrings": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.MultiPoint.prototype = {
  "addEventListener": function () {},
  "appendPoint": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getPoint": function () {},
  "getPoints": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.MultiPolygon.prototype = {
  "addEventListener": function () {},
  "appendPolygon": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getArea": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getEndss": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getFlatInteriorPoints": function () {},
  "getInteriorPoints": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getOrientedFlatCoordinates": function () {},
  "getPolygon": function () {},
  "getPolygons": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.Point.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.Polygon.prototype = {
  "addEventListener": function () {},
  "appendLinearRing": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getArea": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getEnds": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getFlatInteriorPoint": function () {},
  "getInteriorPoint": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getLinearRing": function () {},
  "getLinearRingCount": function () {},
  "getLinearRings": function () {},
  "getListeners": function () {},
  "getOrientedFlatCoordinates": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.geom.SimpleGeometry.prototype = {
  "addEventListener": function () {},
  "applyTransform": function () {},
  "changed": function () {},
  "clone": function () {},
  "closestPointXY": function () {},
  "computeExtent": function () {},
  "constructor": function () {},
  "containsXY": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getClosestPoint": function () {},
  "getCoordinates": function () {},
  "getExtent": function () {},
  "getFirstCoordinate": function () {},
  "getFlatCoordinates": function () {},
  "getKeys": function () {},
  "getLastCoordinate": function () {},
  "getLayout": function () {},
  "getListeners": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSimplifiedGeometry": function () {},
  "getSimplifiedGeometryInternal": function () {},
  "getStride": function () {},
  "getType": function () {},
  "hasListener": function () {},
  "intersectsCoordinate": function () {},
  "intersectsExtent": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setCoordinates": function () {},
  "setFlatCoordinates": function () {},
  "setLayout": function () {},
  "setProperties": function () {},
  "simplify": function () {},
  "transform": function () {},
  "translate": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.DoubleClickZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.DragAndDrop.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "handleResult_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "registerListeners_": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "tryReadFeatures_": function () {},
  "un": function () {},
  "unregisterListeners_": function () {},
  "unset": function () {}
};
ol.interaction.DragBox.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "defaultBoxEndCondition": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getGeometry": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.DragPan.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.DragRotate.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.DragRotateAndZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.DragZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "defaultBoxEndCondition": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getGeometry": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.Draw.prototype = {
  "abortDrawing_": function () {},
  "addEventListener": function () {},
  "addToDrawing_": function () {},
  "atFinish_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createOrUpdateSketchPoint_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "extend": function () {},
  "finishDrawing": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getOverlay": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handlePointerMove_": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "modifyDrawing_": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "removeLastPoint": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "startDrawing_": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateSketchFeatures_": function () {},
  "updateState_": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.Extent.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createOrUpdateExtentFeature_": function () {},
  "createOrUpdatePointerFeature_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handlePointerMove_": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setExtent": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "snapToVertex_": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.Interaction.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.KeyboardPan.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.KeyboardZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.Modify.prototype = {
  "addEventListener": function () {},
  "addFeature_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createOrUpdateVertexFeature_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getOverlay": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleFeatureAdd_": function () {},
  "handleFeatureChange_": function () {},
  "handleFeatureRemove_": function () {},
  "handleMoveEvent": function () {},
  "handlePointerAtPixel_": function () {},
  "handlePointerMove_": function () {},
  "handleSourceAdd_": function () {},
  "handleSourceRemove_": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "insertVertex_": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "removeFeatureSegmentData_": function () {},
  "removeFeature_": function () {},
  "removePoint": function () {},
  "removeVertex_": function () {},
  "set": function () {},
  "setActive": function () {},
  "setGeometryCoordinates_": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateSegmentIndices_": function () {},
  "updateTrackedPointers_": function () {},
  "willModifyFeatures_": function () {},
  "writeCircleGeometry_": function () {},
  "writeGeometryCollectionGeometry_": function () {},
  "writeLineStringGeometry_": function () {},
  "writeMultiLineStringGeometry_": function () {},
  "writeMultiPointGeometry_": function () {},
  "writeMultiPolygonGeometry_": function () {},
  "writePointGeometry_": function () {},
  "writePolygonGeometry_": function () {}
};
ol.interaction.MouseWheelZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "decrementInteractingHint_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "handleWheelZoom_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setMouseAnchor": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.PinchRotate.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.PinchZoom.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.Pointer.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateTrackedPointers_": function () {}
};
ol.interaction.Select.prototype = {
  "addEventListener": function () {},
  "addFeatureLayerAssociation_": function () {},
  "addFeature_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getActive": function () {},
  "getFeatures": function () {},
  "getHitTolerance": function () {},
  "getKeys": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getOverlay": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "removeFeatureLayerAssociation_": function () {},
  "removeFeature_": function () {},
  "set": function () {},
  "setActive": function () {},
  "setHitTolerance": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.interaction.Snap.prototype = {
  "addEventListener": function () {},
  "addFeature": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAdd_": function () {},
  "forEachFeatureRemove_": function () {},
  "get": function () {},
  "getActive": function () {},
  "getFeatures_": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleFeatureAdd_": function () {},
  "handleFeatureChange_": function () {},
  "handleFeatureRemove_": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "removeFeature": function () {},
  "set": function () {},
  "setActive": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "snapTo": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateFeature_": function () {},
  "updateTrackedPointers_": function () {},
  "writeCircleGeometry_": function () {},
  "writeGeometryCollectionGeometry_": function () {},
  "writeLineStringGeometry_": function () {},
  "writeMultiLineStringGeometry_": function () {},
  "writeMultiPointGeometry_": function () {},
  "writeMultiPolygonGeometry_": function () {},
  "writePointGeometry_": function () {},
  "writePolygonGeometry_": function () {}
};
ol.interaction.Translate.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "featuresAtPixel_": function () {},
  "get": function () {},
  "getActive": function () {},
  "getHitTolerance": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getMap": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "handleActiveChanged_": function () {},
  "handleDownEvent": function () {},
  "handleDragEvent": function () {},
  "handleEvent": function () {},
  "handleMoveEvent": function () {},
  "handleUpEvent": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setActive": function () {},
  "setHitTolerance": function () {},
  "setMap": function () {},
  "setProperties": function () {},
  "stopDown": function () {},
  "un": function () {},
  "unset": function () {},
  "updateState_": function () {},
  "updateTrackedPointers_": function () {}
};
ol.layer.Base.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSourceState": function () {},
  "getType": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setExtent": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setProperties": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.Group.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayers": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSourceState": function () {},
  "getType": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleLayerChange_": function () {},
  "handleLayersAdd_": function () {},
  "handleLayersChanged_": function () {},
  "handleLayersRemove_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setExtent": function () {},
  "setLayers": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setProperties": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.Heatmap.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createCircle_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getBlur": function () {},
  "getDeclutter": function () {},
  "getExtent": function () {},
  "getGradient": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getProperties": function () {},
  "getRadius": function () {},
  "getRenderBuffer": function () {},
  "getRenderMode": function () {},
  "getRenderOrder": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getSourceState": function () {},
  "getStyle": function () {},
  "getStyleFunction": function () {},
  "getType": function () {},
  "getUpdateWhileAnimating": function () {},
  "getUpdateWhileInteracting": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleGradientChanged_": function () {},
  "handleRender_": function () {},
  "handleSourceChange_": function () {},
  "handleSourcePropertyChange_": function () {},
  "handleStyleChanged_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setBlur": function () {},
  "setDeclutter": function () {},
  "setExtent": function () {},
  "setGradient": function () {},
  "setMap": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setProperties": function () {},
  "setRadius": function () {},
  "setRenderOrder": function () {},
  "setSource": function () {},
  "setStyle": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.Image.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getSourceState": function () {},
  "getType": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleSourceChange_": function () {},
  "handleSourcePropertyChange_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setExtent": function () {},
  "setMap": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setProperties": function () {},
  "setSource": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.Tile.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getPreload": function () {},
  "getProperties": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getSourceState": function () {},
  "getType": function () {},
  "getUseInterimTilesOnError": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleSourceChange_": function () {},
  "handleSourcePropertyChange_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setExtent": function () {},
  "setMap": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setPreload": function () {},
  "setProperties": function () {},
  "setSource": function () {},
  "setUseInterimTilesOnError": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.Vector.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getDeclutter": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getProperties": function () {},
  "getRenderBuffer": function () {},
  "getRenderMode": function () {},
  "getRenderOrder": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getSourceState": function () {},
  "getStyle": function () {},
  "getStyleFunction": function () {},
  "getType": function () {},
  "getUpdateWhileAnimating": function () {},
  "getUpdateWhileInteracting": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleSourceChange_": function () {},
  "handleSourcePropertyChange_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setDeclutter": function () {},
  "setExtent": function () {},
  "setMap": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setProperties": function () {},
  "setRenderOrder": function () {},
  "setSource": function () {},
  "setStyle": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.layer.VectorTile.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getDeclutter": function () {},
  "getExtent": function () {},
  "getKeys": function () {},
  "getLayerState": function () {},
  "getLayerStatesArray": function () {},
  "getLayersArray": function () {},
  "getListeners": function () {},
  "getMaxResolution": function () {},
  "getMinResolution": function () {},
  "getOpacity": function () {},
  "getPreload": function () {},
  "getProperties": function () {},
  "getRenderBuffer": function () {},
  "getRenderMode": function () {},
  "getRenderOrder": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getSourceState": function () {},
  "getStyle": function () {},
  "getStyleFunction": function () {},
  "getType": function () {},
  "getUpdateWhileAnimating": function () {},
  "getUpdateWhileInteracting": function () {},
  "getUseInterimTilesOnError": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "handleSourceChange_": function () {},
  "handleSourcePropertyChange_": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setDeclutter": function () {},
  "setExtent": function () {},
  "setMap": function () {},
  "setMaxResolution": function () {},
  "setMinResolution": function () {},
  "setOpacity": function () {},
  "setPreload": function () {},
  "setProperties": function () {},
  "setRenderOrder": function () {},
  "setSource": function () {},
  "setStyle": function () {},
  "setUseInterimTilesOnError": function () {},
  "setVisible": function () {},
  "setZIndex": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.proj.Projection.prototype = {
  "canWrapX": function () {},
  "getAxisOrientation": function () {},
  "getCode": function () {},
  "getDefaultTileGrid": function () {},
  "getExtent": function () {},
  "getMetersPerUnit": function () {},
  "getPointResolutionFunc": function () {},
  "getUnits": function () {},
  "getWorldExtent": function () {},
  "isGlobal": function () {},
  "setDefaultTileGrid": function () {},
  "setExtent": function () {},
  "setGetPointResolution": function () {},
  "setGlobal": function () {},
  "setWorldExtent": function () {}
};
ol.render.VectorContext.prototype = {
  "drawCircle": function () {},
  "drawCustom": function () {},
  "drawFeature": function () {},
  "drawGeometry": function () {},
  "drawGeometryCollection": function () {},
  "drawLineString": function () {},
  "drawMultiLineString": function () {},
  "drawMultiPoint": function () {},
  "drawMultiPolygon": function () {},
  "drawPoint": function () {},
  "drawPolygon": function () {},
  "drawText": function () {},
  "setFillStrokeStyle": function () {},
  "setImageStyle": function () {},
  "setStyle": function () {},
  "setTextStyle": function () {}
};
ol.render.canvas.labelCache.constructor.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "clear": function () {},
  "constructor": function () {},
  "containsKey": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEach": function () {},
  "get": function () {},
  "getCount": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getValues": function () {},
  "hasListener": function () {},
  "peekFirstKey": function () {},
  "peekLast": function () {},
  "peekLastKey": function () {},
  "pop": function () {},
  "prune": function () {},
  "remove": function () {},
  "removeEventListener": function () {},
  "replace": function () {},
  "set": function () {},
  "setSize": function () {}
};
ol.renderer.canvas.ImageLayer.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "clip": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtCoordinate": function () {},
  "getImage": function () {},
  "getImageTransform": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getRevision": function () {},
  "getTransform": function () {},
  "handleImageChange_": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "postCompose": function () {},
  "preCompose": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.canvas.Map.prototype = {
  "calculateMatrices2D": function () {},
  "constructor": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtPixel": function () {},
  "getLayerRenderer": function () {},
  "getLayerRendererByKey": function () {},
  "getLayerRenderers": function () {},
  "getMap": function () {},
  "getTransform": function () {},
  "handleLayerRendererChange_": function () {},
  "hasFeatureAtCoordinate": function () {},
  "registerLayerRenderers": function () {},
  "removeLayerRendererByKey_": function () {},
  "removeLayerRenderers": function () {},
  "removeUnusedLayerRenderers_": function () {},
  "renderFrame": function () {},
  "scheduleExpireIconCache": function () {},
  "scheduleRemoveUnusedLayerRenderers": function () {}
};
ol.renderer.canvas.TileLayer.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "clip": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "drawTileImage": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtCoordinate": function () {},
  "getImage": function () {},
  "getImageTransform": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getRevision": function () {},
  "getTile": function () {},
  "getTileImage": function () {},
  "getTransform": function () {},
  "handleImageChange_": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "isDrawableTile_": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "postCompose": function () {},
  "preCompose": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.canvas.VectorLayer.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "clip": function () {},
  "compose": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtCoordinate": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getRevision": function () {},
  "getTransform": function () {},
  "handleFontsChanged_": function () {},
  "handleImageChange_": function () {},
  "handleStyleImageChange_": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "postCompose": function () {},
  "preCompose": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderFeature": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.canvas.VectorTileLayer.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "clip": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "createReplayGroup_": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "drawTileImage": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtCoordinate": function () {},
  "getImage": function () {},
  "getImageTransform": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getReplayTransform_": function () {},
  "getRevision": function () {},
  "getTile": function () {},
  "getTileImage": function () {},
  "getTransform": function () {},
  "handleFontsChanged_": function () {},
  "handleImageChange_": function () {},
  "handleStyleImageChange_": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "isDrawableTile_": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "postCompose": function () {},
  "preCompose": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderFeature": function () {},
  "renderIfReadyAndVisible": function () {},
  "renderTileImage_": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.webgl.ImageLayer.prototype = {
  "addEventListener": function () {},
  "bindFramebuffer": function () {},
  "changed": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "createTexture_": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtPixel": function () {},
  "getHitTransformationMatrix_": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getProjectionMatrix": function () {},
  "getRevision": function () {},
  "getTexCoordMatrix": function () {},
  "getTexture": function () {},
  "handleImageChange_": function () {},
  "handleWebGLContextLost": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateProjectionMatrix_": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.webgl.Map.prototype = {
  "bindTileTexture": function () {},
  "calculateMatrices2D": function () {},
  "constructor": function () {},
  "dispatchRenderEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache_": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtPixel": function () {},
  "getContext": function () {},
  "getGL": function () {},
  "getLayerRenderer": function () {},
  "getLayerRendererByKey": function () {},
  "getLayerRenderers": function () {},
  "getMap": function () {},
  "getTileTextureQueue": function () {},
  "handleLayerRendererChange_": function () {},
  "handleWebGLContextLost": function () {},
  "handleWebGLContextRestored": function () {},
  "hasFeatureAtCoordinate": function () {},
  "initializeGL_": function () {},
  "isTileTextureLoaded": function () {},
  "registerLayerRenderers": function () {},
  "removeLayerRendererByKey_": function () {},
  "removeLayerRenderers": function () {},
  "removeUnusedLayerRenderers_": function () {},
  "renderFrame": function () {},
  "scheduleExpireIconCache": function () {},
  "scheduleRemoveUnusedLayerRenderers": function () {}
};
ol.renderer.webgl.TileLayer.prototype = {
  "addEventListener": function () {},
  "bindFramebuffer": function () {},
  "changed": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtPixel": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getProjectionMatrix": function () {},
  "getRevision": function () {},
  "getTexCoordMatrix": function () {},
  "getTexture": function () {},
  "handleImageChange_": function () {},
  "handleWebGLContextLost": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.renderer.webgl.VectorLayer.prototype = {
  "addEventListener": function () {},
  "bindFramebuffer": function () {},
  "changed": function () {},
  "composeFrame": function () {},
  "constructor": function () {},
  "createLoadedTileFinder": function () {},
  "dispatchComposeEvent_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeatureAtCoordinate": function () {},
  "forEachLayerAtPixel": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getProjectionMatrix": function () {},
  "getRevision": function () {},
  "getTexCoordMatrix": function () {},
  "getTexture": function () {},
  "handleImageChange_": function () {},
  "handleStyleImageChange_": function () {},
  "handleWebGLContextLost": function () {},
  "hasFeatureAtCoordinate": function () {},
  "hasListener": function () {},
  "loadImage": function () {},
  "manageTilePyramid": function () {},
  "on": function () {},
  "once": function () {},
  "prepareFrame": function () {},
  "removeEventListener": function () {},
  "renderFeature": function () {},
  "renderIfReadyAndVisible": function () {},
  "scheduleExpireCache": function () {},
  "un": function () {},
  "updateUsedTiles": function () {}
};
ol.source.BingMaps.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getApiKey": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getImagerySet": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleImageryMetadataResponse": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.CartoDB.prototype = {
  "addEventListener": function () {},
  "applyTemplate_": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getConfig": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleInitError_": function () {},
  "handleInitResponse_": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "initializeMap_": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setConfig": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "updateConfig": function () {},
  "useTile": function () {}
};
ol.source.Cluster.prototype = {
  "addEventListener": function () {},
  "addFeature": function () {},
  "addFeatureInternal": function () {},
  "addFeatures": function () {},
  "addFeaturesInternal": function () {},
  "addToIndex_": function () {},
  "bindFeaturesCollection_": function () {},
  "changed": function () {},
  "clear": function () {},
  "cluster": function () {},
  "constructor": function () {},
  "createCluster": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeature": function () {},
  "forEachFeatureAtCoordinateDirect": function () {},
  "forEachFeatureInExtent": function () {},
  "forEachFeatureIntersectingExtent": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getClosestFeatureToCoordinate": function () {},
  "getDistance": function () {},
  "getExtent": function () {},
  "getFeatureById": function () {},
  "getFeatures": function () {},
  "getFeaturesAtCoordinate": function () {},
  "getFeaturesCollection": function () {},
  "getFeaturesInExtent": function () {},
  "getFormat": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOverlaps": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getSource": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleFeatureChange_": function () {},
  "hasFeature": function () {},
  "hasListener": function () {},
  "isEmpty": function () {},
  "loadFeatures": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "removeFeature": function () {},
  "removeFeatureInternal": function () {},
  "removeFromIdIndex_": function () {},
  "removeLoadedExtent": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setDistance": function () {},
  "setLoader": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "setupChangeEvents_": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.Image.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.ImageArcGISRest.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getImageLoadFunction": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getParams": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRequestUrl_": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setImageLoadFunction": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "setUrl": function () {},
  "un": function () {},
  "unset": function () {},
  "updateParams": function () {}
};
ol.source.ImageCanvas.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.ImageMapGuide.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getImageLoadFunction": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getParams": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setImageLoadFunction": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {},
  "updateParams": function () {}
};
ol.source.ImageStatic.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageExtent": function () {},
  "getImageInternal": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.ImageWMS.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGetFeatureInfoUrl": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getImageLoadFunction": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getParams": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRequestUrl_": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setImageLoadFunction": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "setUrl": function () {},
  "un": function () {},
  "unset": function () {},
  "updateParams": function () {},
  "updateV13_": function () {}
};
ol.source.OSM.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.Raster.prototype = {
  "addEventListener": function () {},
  "allSourcesReady_": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "findNearestResolution": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getImage": function () {},
  "getImageInternal": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getWrapX": function () {},
  "handleImageChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "onWorkerComplete_": function () {},
  "once": function () {},
  "processSources_": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setOperation": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {},
  "updateFrameState_": function () {}
};
ol.source.Source.prototype = {
  "addEventListener": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getWrapX": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.Stamen.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.Tile.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getWrapX": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.TileArcGISRest.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeyForParams_": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getParams": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRequestUrl_": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "updateParams": function () {},
  "useTile": function () {}
};
ol.source.TileDebug.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getWrapX": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.TileImage.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.TileJSON.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileJSON": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "handleTileJSONError": function () {},
  "handleTileJSONResponse": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "onXHRError_": function () {},
  "onXHRLoad_": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.TileWMS.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGetFeatureInfoUrl": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeyForParams_": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getParams": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRequestUrl_": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "updateParams": function () {},
  "updateV13_": function () {},
  "useTile": function () {}
};
ol.source.UTFGrid.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forDataAtCoordinateAndResolution": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTemplate": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getWrapX": function () {},
  "handleTileJSONError": function () {},
  "handleTileJSONResponse": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "onXHRError_": function () {},
  "onXHRLoad_": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.Vector.prototype = {
  "addEventListener": function () {},
  "addFeature": function () {},
  "addFeatureInternal": function () {},
  "addFeatures": function () {},
  "addFeaturesInternal": function () {},
  "addToIndex_": function () {},
  "bindFeaturesCollection_": function () {},
  "changed": function () {},
  "clear": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "forEachFeature": function () {},
  "forEachFeatureAtCoordinateDirect": function () {},
  "forEachFeatureInExtent": function () {},
  "forEachFeatureIntersectingExtent": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getClosestFeatureToCoordinate": function () {},
  "getExtent": function () {},
  "getFeatureById": function () {},
  "getFeatures": function () {},
  "getFeaturesAtCoordinate": function () {},
  "getFeaturesCollection": function () {},
  "getFeaturesInExtent": function () {},
  "getFormat": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOverlaps": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getUrl": function () {},
  "getWrapX": function () {},
  "handleFeatureChange_": function () {},
  "hasFeature": function () {},
  "hasListener": function () {},
  "isEmpty": function () {},
  "loadFeatures": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "removeFeature": function () {},
  "removeFeatureInternal": function () {},
  "removeFromIdIndex_": function () {},
  "removeLoadedExtent": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setLoader": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "setupChangeEvents_": function () {},
  "un": function () {},
  "unset": function () {}
};
ol.source.VectorTile.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "clear": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getOverlaps": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setState": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.WMTS.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getDimensions": function () {},
  "getFormat": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeyForDimensions_": function () {},
  "getKeys": function () {},
  "getLayer": function () {},
  "getListeners": function () {},
  "getMatrixSet": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getRequestEncoding": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getStyle": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getVersion": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "updateDimensions": function () {},
  "useTile": function () {}
};
ol.source.XYZ.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.source.Zoomify.prototype = {
  "addEventListener": function () {},
  "canExpireCache": function () {},
  "changed": function () {},
  "constructor": function () {},
  "createTile_": function () {},
  "dispatchEvent": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "expireCache": function () {},
  "forEachLoadedTile": function () {},
  "get": function () {},
  "getAttributions": function () {},
  "getAttributionsCollapsible": function () {},
  "getGutter": function () {},
  "getGutterForProjection": function () {},
  "getKey": function () {},
  "getKeys": function () {},
  "getListeners": function () {},
  "getOpaque": function () {},
  "getProjection": function () {},
  "getProperties": function () {},
  "getResolutions": function () {},
  "getRevision": function () {},
  "getState": function () {},
  "getTile": function () {},
  "getTileCacheForProjection": function () {},
  "getTileCoordForTileUrlFunction": function () {},
  "getTileGrid": function () {},
  "getTileGridForProjection": function () {},
  "getTileInternal": function () {},
  "getTileLoadFunction": function () {},
  "getTilePixelRatio": function () {},
  "getTilePixelSize": function () {},
  "getTileUrlFunction": function () {},
  "getUrls": function () {},
  "getWrapX": function () {},
  "handleTileChange": function () {},
  "hasListener": function () {},
  "notify": function () {},
  "on": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeEventListener": function () {},
  "set": function () {},
  "setAttributions": function () {},
  "setKey": function () {},
  "setProperties": function () {},
  "setRenderReprojectionEdges": function () {},
  "setState": function () {},
  "setTileGridForProjection": function () {},
  "setTileLoadFunction": function () {},
  "setTileUrlFunction": function () {},
  "setUrl": function () {},
  "setUrls": function () {},
  "un": function () {},
  "unset": function () {},
  "useTile": function () {}
};
ol.style.AtlasManager.prototype = {
  "add": function () {},
  "add_": function () {},
  "getInfo": function () {},
  "getInfo_": function () {},
  "mergeInfos_": function () {}
};
ol.style.Circle.prototype = {
  "clone": function () {},
  "constructor": function () {},
  "createHitDetectionCanvas_": function () {},
  "drawHitDetectionCanvas_": function () {},
  "draw_": function () {},
  "getAnchor": function () {},
  "getAngle": function () {},
  "getChecksum": function () {},
  "getFill": function () {},
  "getHitDetectionImage": function () {},
  "getHitDetectionImageSize": function () {},
  "getImage": function () {},
  "getImageSize": function () {},
  "getImageState": function () {},
  "getOpacity": function () {},
  "getOrigin": function () {},
  "getPoints": function () {},
  "getRadius": function () {},
  "getRadius2": function () {},
  "getRotateWithView": function () {},
  "getRotation": function () {},
  "getScale": function () {},
  "getSize": function () {},
  "getSnapToPixel": function () {},
  "getStroke": function () {},
  "listenImageChange": function () {},
  "load": function () {},
  "render_": function () {},
  "setOpacity": function () {},
  "setRadius": function () {},
  "setRotateWithView": function () {},
  "setRotation": function () {},
  "setScale": function () {},
  "setSnapToPixel": function () {},
  "unlistenImageChange": function () {}
};
ol.style.Fill.prototype = {
  "clone": function () {},
  "getChecksum": function () {},
  "getColor": function () {},
  "setColor": function () {}
};
ol.style.Icon.prototype = {
  "clone": function () {},
  "constructor": function () {},
  "getAnchor": function () {},
  "getColor": function () {},
  "getHitDetectionImage": function () {},
  "getHitDetectionImageSize": function () {},
  "getImage": function () {},
  "getImageSize": function () {},
  "getImageState": function () {},
  "getOpacity": function () {},
  "getOrigin": function () {},
  "getRotateWithView": function () {},
  "getRotation": function () {},
  "getScale": function () {},
  "getSize": function () {},
  "getSnapToPixel": function () {},
  "getSrc": function () {},
  "listenImageChange": function () {},
  "load": function () {},
  "setAnchor": function () {},
  "setOpacity": function () {},
  "setRotateWithView": function () {},
  "setRotation": function () {},
  "setScale": function () {},
  "setSnapToPixel": function () {},
  "unlistenImageChange": function () {}
};
ol.style.Image.prototype = {
  "clone": function () {},
  "getAnchor": function () {},
  "getHitDetectionImage": function () {},
  "getHitDetectionImageSize": function () {},
  "getImage": function () {},
  "getImageSize": function () {},
  "getImageState": function () {},
  "getOpacity": function () {},
  "getOrigin": function () {},
  "getRotateWithView": function () {},
  "getRotation": function () {},
  "getScale": function () {},
  "getSize": function () {},
  "getSnapToPixel": function () {},
  "listenImageChange": function () {},
  "load": function () {},
  "setOpacity": function () {},
  "setRotateWithView": function () {},
  "setRotation": function () {},
  "setScale": function () {},
  "setSnapToPixel": function () {},
  "unlistenImageChange": function () {}
};
ol.style.RegularShape.prototype = {
  "clone": function () {},
  "constructor": function () {},
  "createHitDetectionCanvas_": function () {},
  "drawHitDetectionCanvas_": function () {},
  "draw_": function () {},
  "getAnchor": function () {},
  "getAngle": function () {},
  "getChecksum": function () {},
  "getFill": function () {},
  "getHitDetectionImage": function () {},
  "getHitDetectionImageSize": function () {},
  "getImage": function () {},
  "getImageSize": function () {},
  "getImageState": function () {},
  "getOpacity": function () {},
  "getOrigin": function () {},
  "getPoints": function () {},
  "getRadius": function () {},
  "getRadius2": function () {},
  "getRotateWithView": function () {},
  "getRotation": function () {},
  "getScale": function () {},
  "getSize": function () {},
  "getSnapToPixel": function () {},
  "getStroke": function () {},
  "listenImageChange": function () {},
  "load": function () {},
  "render_": function () {},
  "setOpacity": function () {},
  "setRotateWithView": function () {},
  "setRotation": function () {},
  "setScale": function () {},
  "setSnapToPixel": function () {},
  "unlistenImageChange": function () {}
};
ol.style.Stroke.prototype = {
  "clone": function () {},
  "getChecksum": function () {},
  "getColor": function () {},
  "getLineCap": function () {},
  "getLineDash": function () {},
  "getLineDashOffset": function () {},
  "getLineJoin": function () {},
  "getMiterLimit": function () {},
  "getWidth": function () {},
  "setColor": function () {},
  "setLineCap": function () {},
  "setLineDash": function () {},
  "setLineDashOffset": function () {},
  "setLineJoin": function () {},
  "setMiterLimit": function () {},
  "setWidth": function () {}
};
ol.style.Style.prototype = {
  "clone": function () {},
  "getFill": function () {},
  "getGeometry": function () {},
  "getGeometryFunction": function () {},
  "getImage": function () {},
  "getRenderer": function () {},
  "getStroke": function () {},
  "getText": function () {},
  "getZIndex": function () {},
  "setFill": function () {},
  "setGeometry": function () {},
  "setImage": function () {},
  "setRenderer": function () {},
  "setStroke": function () {},
  "setText": function () {},
  "setZIndex": function () {}
};
ol.style.Text.prototype = {
  "clone": function () {},
  "getBackgroundFill": function () {},
  "getBackgroundStroke": function () {},
  "getFill": function () {},
  "getFont": function () {},
  "getMaxAngle": function () {},
  "getOffsetX": function () {},
  "getOffsetY": function () {},
  "getOverflow": function () {},
  "getPadding": function () {},
  "getPlacement": function () {},
  "getRotateWithView": function () {},
  "getRotation": function () {},
  "getScale": function () {},
  "getStroke": function () {},
  "getText": function () {},
  "getTextAlign": function () {},
  "getTextBaseline": function () {},
  "setBackgroundFill": function () {},
  "setBackgroundStroke": function () {},
  "setFill": function () {},
  "setFont": function () {},
  "setMaxAngle": function () {},
  "setOffsetX": function () {},
  "setOffsetY": function () {},
  "setOverflow": function () {},
  "setPadding": function () {},
  "setPlacement": function () {},
  "setRotation": function () {},
  "setScale": function () {},
  "setStroke": function () {},
  "setText": function () {},
  "setTextAlign": function () {},
  "setTextBaseline": function () {}
};
ol.tilegrid.TileGrid.prototype = {
  "calculateTileRanges_": function () {},
  "forEachTileCoord": function () {},
  "forEachTileCoordParentTileRange": function () {},
  "getExtent": function () {},
  "getFullTileRange": function () {},
  "getMaxZoom": function () {},
  "getMinZoom": function () {},
  "getOrigin": function () {},
  "getResolution": function () {},
  "getResolutions": function () {},
  "getTileCoordCenter": function () {},
  "getTileCoordChildTileRange": function () {},
  "getTileCoordExtent": function () {},
  "getTileCoordForCoordAndResolution": function () {},
  "getTileCoordForCoordAndZ": function () {},
  "getTileCoordForXYAndResolution_": function () {},
  "getTileCoordForXYAndZ_": function () {},
  "getTileCoordResolution": function () {},
  "getTileRangeExtent": function () {},
  "getTileRangeForExtentAndZ": function () {},
  "getTileSize": function () {},
  "getZForResolution": function () {}
};
ol.tilegrid.WMTS.prototype = {
  "calculateTileRanges_": function () {},
  "constructor": function () {},
  "forEachTileCoord": function () {},
  "forEachTileCoordParentTileRange": function () {},
  "getExtent": function () {},
  "getFullTileRange": function () {},
  "getMatrixId": function () {},
  "getMatrixIds": function () {},
  "getMaxZoom": function () {},
  "getMinZoom": function () {},
  "getOrigin": function () {},
  "getResolution": function () {},
  "getResolutions": function () {},
  "getTileCoordCenter": function () {},
  "getTileCoordChildTileRange": function () {},
  "getTileCoordExtent": function () {},
  "getTileCoordForCoordAndResolution": function () {},
  "getTileCoordForCoordAndZ": function () {},
  "getTileCoordForXYAndResolution_": function () {},
  "getTileCoordForXYAndZ_": function () {},
  "getTileCoordResolution": function () {},
  "getTileRangeExtent": function () {},
  "getTileRangeForExtentAndZ": function () {},
  "getTileSize": function () {},
  "getZForResolution": function () {}
};
/**********************************************************************
 * End Generated Extern for ol
/**********************************************************************/
