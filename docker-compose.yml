version: '2'
services:

  proxy-base:
    image: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './nginx/:/etc/nginx/conf.d:z'
      - './certs/:/certs:z'
      - './webapp/resources/public/:/usr/share/nginx/html:z'

  proxy:
    extends:
      service: proxy-base
    links:
      - mapproxy
      - backend

  proxy-dev:
    extends:
      service: proxy-base
    links:
      - mapproxy
      - backend-dev

  mapproxy:
    image: kartoza/mapproxy
    hostname: mapproxy
    environment:
      TZ: Europe/Helsinki
      MML_AUTH:
    command: /mapproxy/start.sh
    volumes:
      - './mapproxy:/mapproxy:z'
      - 'mapproxy_cache:/mapproxy/cache_data'
    ports:
      - '8080:8080'

  backend-base:
    image: clojure:lein
    working_dir: /usr/src/app
    environment:
      DB_HOST:
      DB_PORT:
      DB_NAME:
      DB_USER:
      DB_PASSWORD:
      SMTP_HOST:
      SMTP_USER:
      SMTP_PASS:
      SMTP_FROM:
      ADMIN_PASSWORD:
      LEIN_SILENT: 'true'
    volumes:
      - './webapp/:/usr/src/app:z'
      - 'mvn_cache:/root/.m2'

  backend:
    extends:
      service: backend-base
    command: java -Duser.timezone=UTC -jar backend.jar
    ports:
      - '8091:8091'
    links:
      - postgres

  backend-dev:
    extends:
      service: backend-base
    command: lein ring server-headless
    ports:
      - '8091:8091'
    links:
      - postgres
      # - elasticsearch

  backend-build:
    extends:
      service: backend-base
    command: bash -c 'lein uberjar && cp /tmp/uberjar/backend.jar .'

  backend-migrate:
    extends:
      service: backend-base
    command: lein migratus migrate
    links:
      - postgres

  backend-migrate-data:
    extends:
      service: backend-base
    environment:
      ICE_STADIUMS_CSV_URL:
      SWIMMING_POOLS_CSV_URL:
    entrypoint: lein run -m lipas.migrate-data
    links:
      - postgres

  backend-tests:
    extends:
      service: backend-base
    command: lein test
    links:
      - postgres
      # - elasticsearch

  backend-seed:
    extends:
      service: backend-base
    command: lein run -m lipas.seed
    links:
      - postgres

  backend-maintenance:
    extends:
      service: backend-base
    entrypoint: lein run -m lipas.maintenance
    links:
      - postgres

  node-base:
    image: node:10-alpine
    working_dir: /usr/src/app
    volumes:
      - './webapp/:/usr/src/app:z'

  frontend-npm-deps:
    extends:
      service: node-base
    command: npm install --quiet

  frontend-npm-bundle:
    extends:
      service: node-base
    command: npx webpack

  frontend-build:
    extends:
      service: backend-base
    command: lein cljsbuild once min

  headless-chrome:
    image: robcherry/docker-chromedriver
    privileged: true
    environment:
      CHROMEDRIVER_WHITELISTED_IPS: '' # Allow any source
    ports:
      - '4444:4444'

  integration-tests:
    extends:
      service: backend-base
    command: lein test :integration
    links:
      - headless-chrome
      - proxy

  postgres:
    image: mdillon/postgis:10
    environment:
      DB_PORT: 5432
      DB_NAME:
      DB_USER:
      DB_PASSWORD:
      DB_SUPERUSER:
      # Official Postgres image uses this variable
      POSTGRES_PASSWORD: ${DB_SUPERUSER_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:z

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    ports:
      - '9200:9200'
    environment:
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data

volumes:
    pgdata: {}
    esdata: {}
    mvn_cache: {}
    mapproxy_cache: {}
